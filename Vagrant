# -*- mode: ruby -*-
# vi: set ft=ruby :
$script = <<SCRIPT
apt-get update
apt-get upgrade -y
apt-get install curl git-core make build-essential libxml2-dev -y
curl -L http://bit.ly/vagrant_boot_v1 | sudo bash
mkdir /tmp/cookbooks/ && cd /tmp/cookbooks/
git clone git://github.com/opscode-cookbooks/nginx.git
cd /tmp/
git clone git://github.com/jjasghar/chef-jenkins-vagrant.git
mv /tmp/chef-jenkins-vagrant/minitest-handler-cookbook-0.1.7 /tmp/cookbooks/minitest-handler-cookbook/
cd /tmp/cookbooks/
git clone git://github.com/opscode-cookbooks/build-essential.git
cd /tmp/cookbooks/
git clone git://github.com/opscode-cookbooks/runit.git
cd /tmp/cookbooks/
git clone git://github.com/opscode-cookbooks/yum.git
cd /tmp/cookbooks/
git clone git://github.com/opscode-cookbooks/apt.git
cd /tmp/cookbooks/
git clone git://github.com/opscode-cookbooks/ohai.git
cd /tmp/cookbooks/
git clone git://github.com/opscode-cookbooks/chef_handler.git
cd /tmp/
cp /etc/ssh/ssh_host_rsa_key /tmp/validation.pem
sudo gem install chef-zero
ruby -e "require 'chef_zero/server' ; server = ChefZero::Server.new(:port => 8889) ; server.start " > /dev/null 2>&1 &
cat << EOF > knife.rb
chef_server_url "http://127.0.0.1:8889"
node_name "blah"
client_key "/tmp/validation.pem"
EOF
knife cookbook upload -o :/tmp/cookbooks -a

SCRIPT

Vagrant::Config.run do |config|
  config.vm.box = "lucid32"
  config.vm.box_url = "http://files.vagrantup.com/lucid32.box"
  config.vm.host_name = 'lucid32'

  config.vm.provision :shell, :inline => $script

   config.vm.provision :chef_client do |chef|
    chef.chef_server_url = "http://localhost:8889"
    chef.validation_key_path = "validation.pem"
    chef.environment = "_default"
    chef.add_recipe "nginx"
    chef.add_recipe "minitest-handler-cookbook"
   end
end
